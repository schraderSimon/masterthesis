from pyspark import SparkContext
import drudge
spark_ctx=SparkContext("local[*]","drudge-tutorial")
dr=drudge.Drudge(spark_ctx)

v=drudge.Vec("v")
import sympy
a=sympy.Symbol("a")
print(str(v[a]))
x=sympy.IndexedBase("x")
l=drudge.Range("L")
tensor=dr.sum((a,l),x[a]*v[a])
print(str(tensor))
b=sympy.Symbol("b")
tensor=dr.sum((a,l),(b,l),x[a,b]*v[a]*v[a,b])
print(str(tensor))
c,d=sympy.Symbol("c"),sympy.Symbol("d")
dr.set_dumms(l,sympy.symbols("a b c d"))
dr.add_resolver_for_dumms()
tensor=dr.einst(x[c,d]*v[c]*v[d])
print(tensor)
tensor=dr.einst(x[a]*v[a])
y=sympy.IndexedBase("y")
res=tensor+dr.einst(y[a]*v[a])
print(res)
print(2*res)
print(tensor)
t=sympy.IndexedBase("t")
w=drudge.Vec("w")
substed=tensor.subst(v[a],dr.einst(t[a,b]*w[b]))
print(substed)
