import sys
sys.path.append("/home/simon/Documents/University/masteroppgave/coding/systems/libraries")
from func_lib import *
file="energy_data/HF_HS.bin"
import pickle
with open(file,"rb") as f:
    data=pickle.load(f)
Hs=data["H"]
Ss=data["S"]
FCI_geoms=[1,1.25,1.5,1.75,2,2.25,2.5,2.75,3,3.5,4,5]
CCSD=[-99.96990829657004, -100.02067194932962, -100.06147100300919, -100.09403754233679, -100.11978423612467, -100.13986957470333, -100.15524840918023, -100.16671114077215, -100.17491431219311, -100.18040480403361, -100.18363923063049, -100.18499967888714, -100.18480658857409, -100.18332933981739, -100.18079496059617, -100.1773952800185, -100.1732927841172, -100.16862540069404, -100.16351040627329, -100.15804761736632, -100.15232201407517, -100.14640591013422, -100.14036076791078, -100.13423872979969, -100.12808393313006, -100.12193363967114, -100.11581921896904, -100.1097670043588, -100.10379903784418, -100.09793371516363, -100.09218634184896, -100.08656960435007, -100.08109396883773, -100.07576801161338, -100.07059869025417, -100.0655915636152, -100.06075096555435, -100.05608014692102, -100.05158138397202, -100.04725606921225, -100.04310478242473, -100.03912734183766, -100.03532286882582, -100.0316898264294, -100.028226077133, -100.02492891486092, -100.02179512203766, -100.018821016608, -100.01600250301921, -100.01333512624602, -100.0108141093238, -100.00843444943712, -100.0061909105931, -100.00407812357963, -100.00209061819177, -100.00022284972468, -99.99846927775467, -99.99682438099556, -99.99528269745657, -99.99383885447442, -99.99248759450484, -99.99122379696581, -99.9900424964598, -99.98893887762495, -99.98790836821894, -99.98694651957537, -99.98604910689794, -99.9852120697838, -99.9844315595653, -99.98370395024284, -99.98302577125953, -99.98239375206937, -99.98180480577918, -99.98125602033433, -99.980744666412, -99.98026817024717, -99.97982412455788]

FCI_energies=[-99.61763594843919, -100.02233609903067, -100.15708053879564, -100.18712346217941, -100.17583274725926, -100.14951120146067, -100.11968327651316, -100.09144082667083, -100.0669261028697, -100.03144824225244, -100.0120880423987, -99.99918263311564]
x=np.linspace(1.2,5,77)
E_FCI_i = interp1d(FCI_geoms,FCI_energies,kind='cubic')
plt.plot(x,E_FCI_i(x),label="FCI")
plt.plot(x,CCSD,label="CCSD")
vals=list(np.arange(10,20,1))
#vals=[10,11,12,53,54,55,56,57,58,59,60]
E=[]
for k in range(len(x)):
    print(k)
    H=Hs[k][np.ix_(vals,vals)].copy()
    S=Ss[k][np.ix_(vals,vals)].copy()
    exponent=float(sys.argv[1])
    #eigvals=np.real(scipy.linalg.eig(scipy.linalg.pinv(S,atol=10**(-exponent))@H)[0])
    #eigvals=np.real(scipy.linalg.eig(a=H,b=S+np.eye(len(S))*10**(-exponent))[0])
    print(np.max(np.abs(np.imag(np.linalg.eig(S)[0]))))
    eigvals=np.real(scipy.linalg.eig(a=H,b=S+np.eye(len(S))*10**(-exponent))[0])
    try:
        pass
        eigvals=np.real(scipy.linalg.eig(a=H,b=S+10**(-exponent)*scipy.linalg.expm(-S/10**(-exponent)))[0])
    except:
        eigvals=np.real(scipy.linalg.eig(a=H,b=S+np.eye(len(S))*10**(-exponent))[0])
    sorted=np.sort(eigvals)
    E.append(sorted[0])
plt.plot(x,E,label="EVC")
plt.plot(x[vals],np.array(CCSD)[vals],"o",label="samplepoints",)
plt.legend()
plt.show()
